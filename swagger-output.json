{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Description of the API functionality",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "JWT Authorization header using the Bearer scheme. Example: 'Authorization: Bearer {token}'"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/auth/createUser": {
      "post": {
        "tags": ["Auth"],
        "description": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "description": "Login to obtain authentication token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful, token returned"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/getUser": {
      "post": {
        "tags": ["Auth"],
        "description": "Get user details",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "userId123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details fetched successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    
    "/qr/QRCode": {
      "post": {
        "tags": ["QR"],
        "description": "Generate a QR Code from a URL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "OriginalUrl": {
                  "type": "string",
                  "example": "https://www.google.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "QR Code generated successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/qr/{urlid}/update": {
      "post": {
        "tags": ["QR"],
        "description": "Update a URL with given ID",
        "parameters": [
          {
            "name": "urlid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "NewUrl": {
                  "type": "string",
                  "example": "http://new-url.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "URL successfully updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/qr/my-codes": {
      "get": {
        "tags": ["QR"],
        "description": "Get all QR codes associated with the user",
        "responses": {
          "200": {
            "description": "QR Codes retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/qr/{id}/analytics": {
      "get": {
        "tags": ["QR"],
        "description": "Get analytics for a specific QR code",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics fetched successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
